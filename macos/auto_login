#!/usr/bin/expect -f

# turn off expect's time-out
set timeout -1

# 设置窗口自适应
trap {
     set rows [stty rows]
     set cols [stty columns]
     stty rows $rows columns $cols < $spawn_out(slave,name)
} WINCH

# 跳板机用户名
set USER [lindex $argv 0]

# 跳板机机器
set JUMPER_HOST [lindex $argv 1]
set JUMPER_PORT [lindex $argv 2]
set JUMPER_PASSWORD [lindex $argv 3]

# [可选]开发机地址, 如：user@host
set HOST [lindex $argv 4]
# [可选] 开发机密码
set PASSWORD [lindex $argv 5]

# [可选] 执行预定命令
set CMD [lindex $argv 6]
# 登录跳板机
spawn ssh $USER@$JUMPER_HOST -p $JUMPER_PORT
# 打开调试模式
# exp_internal 1

expect {
    -re "Are you sure you want to continue connecting.*" {
        send "yes\r"
        exp_continue
    }

    -re "password:" {
        # 输入跳板机密码，登陆跳板机
        send "$JUMPER_PASSWORD\r"
        exp_continue
    }

    eof {
        puts "SSH connection closed unexpectedly"
        exit 1
    }

    timeout {
        puts "SSH connection timed out"
        exit 1
    }

    # 自动登录开发机
    -re "@.*$" {
        if { $HOST != "" } {
            # if $HOST contains substring xx, then send ssh with --yy
            if {[string first "172.17" "$HOST"] != -1} {
                send "ssh $HOST\r"
            } elseif {[string match "150.223.248*" "$JUMPER_HOST"]} {
                send "ssh -o GSSAPIAuthentication=no $HOST\r"
                set PASSWORD ""
            } elseif {[string match "cwai*" "$JUMPER_HOST"]} {
                send "ssh -o GSSAPIAuthentication=no $HOST\r"
                set PASSWORD ""
            } elseif { \
                "$HOST" == "123" || \
                "$HOST" == "127.0.0.1"
            } {
                send "ssh -o GSSAPIAuthentication=no $HOST\r"
                set PASSWORD ""
            } else {
                send "ssh -o GSSAPIAuthentication=no $HOST\r"
            }

            if { "$PASSWORD" != "" } {
                expect -re "password:" { send "$PASSWORD\r" }
            }

            if { "$CMD" != "" } {
                expect -re "@" { send "$CMD\r" }
            }

            expect {
                -re {[#\$%]} { # 匹配常见的 shell 提示符  
                    # 发送命令前，先设置编码（如果需要）  
                    send "export LANG=en_US.UTF-8;export LC_ALL=en_US.UTF-8;export LC_CTYPE=en_US.UTF-8\r"  
                    expect {  
                        -re {[#\$%]} { # 再次等待提示符以确保环境变量已设置  
                            if { "$CMD" != "" } {  
                                send "$CMD\r"  
                            }  
                        }  
                    }  
                }  
                eof {  
                    puts "Connection to $HOST closed unexpectedly"  
                    exit 1  
                }  
                timeout {  
                    puts "Timeout waiting for prompt on $HOST"  
                    exit 1  
                }  
            }
        }
    }
}

# 关闭调试模式
# exp_internal 0
interact
exit

#------------------------------

#alias autoCMD='expect $HOME/.expect.sh username password'
#alias dev1='autoCMD root@host password'
#alias dev2='autoCMD root@host password "clear && su - work && clear"'
#alias dev3='autoCMD root@host "密码"'
#alias dev4='autoCMD host "" "cd /home/work && clear"'
#alias dev5='autoCMD work@host "" "cd /home/work && clear"'
#alias dev6='autoCMD work@host'
